CREATE TABLE "users" (
	"u_id" serial NOT NULL,
	"fname" varchar(32) NOT NULL,
	"lname" varchar(32) NOT NULL,
	"password" varchar(64) NOT NULL,
	"email" varchar(128) NOT NULL UNIQUE,
	CONSTRAINT users_pk PRIMARY KEY ("u_id")
) WITH (
  OIDS=FALSE
);



CREATE TABLE "questions" (
	"q_id" serial NOT NULL,
	"q_str" TEXT NOT NULL,
	"q_auth" bigint NOT NULL,
	"pub_date" DATE NOT NULL,
	CONSTRAINT questions_pk PRIMARY KEY ("q_id")
) WITH (
  OIDS=FALSE
);



CREATE TABLE "concept" (
	"c_id" serial NOT NULL,
	"c_str" varchar(64) NOT NULL,
	CONSTRAINT concept_pk PRIMARY KEY ("c_id")
) WITH (
  OIDS=FALSE
);



CREATE TABLE "tag" (
	"q_id" bigint NOT NULL,
	"c_id" bigint NOT NULL,
	CONSTRAINT tag_pk PRIMARY KEY ("q_id","c_id")
) WITH (
  OIDS=FALSE
);



CREATE TABLE "answers" (
	"q_id" bigint NOT NULL,
	"ans_id" serial NOT NULL,
	"ans_str" TEXT NOT NULL UNIQUE,
	"ans_date" DATE NOT NULL,
	"ans_auth" bigint NOT NULL,
	CONSTRAINT answers_pk PRIMARY KEY ("ans_id")
) WITH (
  OIDS=FALSE
);



CREATE TABLE "comment" (
	"target_q" bigint,
	"target_ans" bigint NOT NULL,
	"cmt_auth" bigint,
	"cmt_date" DATE NOT NULL,
	"cmt_id" serial NOT NULL,
	"target_cmt" bigint,
	CONSTRAINT comment_pk PRIMARY KEY ("cmt_id")
) WITH (
  OIDS=FALSE
);



CREATE TABLE "vote" (
	"target_q" bigint,
	"target_ans" bigint,
	"value" bit NOT NULL,
	"vote_by" bigint NOT NULL
) WITH (
  OIDS=FALSE
);



CREATE TABLE "follows" (
	"user_id" bigint NOT NULL,
	"follows" bigint NOT NULL,
	CONSTRAINT follows_pk PRIMARY KEY ("user_id","follows")
) WITH (
  OIDS=FALSE
);



CREATE TABLE "intrested_in" (
	"concept" bigint NOT NULL,
	"user_id" bigint NOT NULL,
	CONSTRAINT intrested_in_pk PRIMARY KEY ("concept","user_id")
) WITH (
  OIDS=FALSE
);

ALTER TABLE "questions" ADD CONSTRAINT "questions_fk0" FOREIGN KEY ("q_auth") REFERENCES "users"("u_id") on delete set null;


ALTER TABLE "tag" ADD CONSTRAINT "tag_fk0" FOREIGN KEY ("q_id") REFERENCES "questions"("q_id") on delete cascade;
ALTER TABLE "tag" ADD CONSTRAINT "tag_fk1" FOREIGN KEY ("c_id") REFERENCES "concept"("c_id") on delete cascade;

ALTER TABLE "answers" ADD CONSTRAINT "answers_fk0" FOREIGN KEY ("q_id") REFERENCES "questions"("q_id") on delete cascade;
ALTER TABLE "answers" ADD CONSTRAINT "answers_fk1" FOREIGN KEY ("ans_auth") REFERENCES "users"("u_id") on delete set null;

ALTER TABLE "comment" ADD CONSTRAINT "comment_fk0" FOREIGN KEY ("target_q") REFERENCES "questions"("q_id") on delete cascade;
ALTER TABLE "comment" ADD CONSTRAINT "comment_fk1" FOREIGN KEY ("target_ans") REFERENCES "answers"("ans_id") on delete cascade;
ALTER TABLE "comment" ADD CONSTRAINT "comment_fk2" FOREIGN KEY ("cmt_auth") REFERENCES "users"("u_id") on delete set null;
ALTER TABLE "comment" ADD CONSTRAINT "comment_fk3" FOREIGN KEY ("target_cmt") REFERENCES "comment"("cmt_id") on delete cascade;

ALTER TABLE "vote" ADD CONSTRAINT "vote_fk0" FOREIGN KEY ("target_q") REFERENCES "questions"("q_id") on delete cascade;
ALTER TABLE "vote" ADD CONSTRAINT "vote_fk1" FOREIGN KEY ("target_ans") REFERENCES "answers"("ans_id") on delete cascade;
ALTER TABLE "vote" ADD CONSTRAINT "vote_fk2" FOREIGN KEY ("value") REFERENCES "answers"("ans_id") on delete cascade;
ALTER TABLE "vote" ADD CONSTRAINT "vote_fk3" FOREIGN KEY ("vote_by") REFERENCES "users"("u_id") on delete cascade;

ALTER TABLE "follows" ADD CONSTRAINT "follows_fk0" FOREIGN KEY ("user_id") REFERENCES "users"("u_id") on delete cascade;
ALTER TABLE "follows" ADD CONSTRAINT "follows_fk1" FOREIGN KEY ("follows") REFERENCES "users"("u_id") on delete cascade;

ALTER TABLE "intrested_in" ADD CONSTRAINT "intrested_in_fk0" FOREIGN KEY ("concept") REFERENCES "concept"("c_id");
ALTER TABLE "intrested_in" ADD CONSTRAINT "intrested_in_fk1" FOREIGN KEY ("user_id") REFERENCES "users"("u_id") on delete cascade;


create or replace function addQuestion(pubid bigint,q_str text,tgs text)
returns void as $BODY$
declare
    nxt_q_id bigint;
    eid int;
    cid int;
    arr varchar(64)[];
    cds varchar(32)[];
    indx int;
    size int;
    size_cds int;
begin

    nxt_q_id := nextval('questions_q_id_seq');
    insert into questions(q_id,q_auth,q_str,pub_date) values (nxt_q_id,pubid,q_str,now());

    arr := string_to_array(tgs,' ');
    size := array_upper(arr,1);
    for indx in 1..size loop
        insert into concept(c_str) values(arr[indx]);
        select c_id into cid from concept where c_str=arr[indx];
        insert into tag(q_id,c_id) values(nxt_q_id,cid);
    end loop;

end $BODY$
language plpgsql;

//drop




drop function addquestion(bigint,text,text);
